<UserControl x:Class="PD_ScriptTemplate.Views.Structure3DView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PD_ScriptTemplate.Views" 
        xmlns:converter="clr-namespace:PD_ScriptTemplate.Converter"
        mc:Ignorable="d" Width="Auto" Height="Auto"
        xmlns:helix="http://helix-toolkit.org/wpf" xmlns:fa="http://schemas.fontawesome.io/icons/">
    <UserControl.Resources>
        <converter:LookBackConverter x:Key="lookBackConverter"/>
        <converter:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converter:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <converter:RangeToBooleanConverter x:Key="RangeToBooleanConverter"/>
        <Style x:Key="GenericSlider" TargetType="Slider">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="GenericButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Padding" Value="20 5"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="38"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="#999999"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="0">
                                <ContentControl Content="{TemplateBinding Content}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#808080" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#999999" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GenericGrid" TargetType="Grid">
            <Setter Property="Background" Value="#999999"/>
        </Style>
        <Style x:Key="GenericTextBlock" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Padding" Value="10 0 0 0"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="30"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="#999999"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericTextBox" TargetType="TextBox">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="#F2F2F2"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"/>
                            <ScrollViewer x:Name="PART_ContentHost"
                                  Margin="0,0,0,0"
                                  Background="Transparent"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  IsTabStop="False"
                                  Padding="{TemplateBinding Padding}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#F2F2F2"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#CCCCCC"/>
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#E6E6E6"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#999999"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FFFFFF"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Height" Value="50"/>
            <Setter Property="BorderThickness" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}">
                            <ContentControl Content="{TemplateBinding Content}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GenericComboBox" TargetType="ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Padding" Value="0 0 0 0" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl x:Name="ContentSite" Grid.Column="0"
                                    Content="{TemplateBinding SelectedItem}"
                                    ContentTemplate="{TemplateBinding ItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    IsHitTestVisible="False"
                                    Foreground="#d9d9d9"
                                    FontFamily="Calibri"
                                    FontSize="20"/>

                            <Grid Grid.Column="1" HorizontalAlignment="Left">
                                <ToggleButton x:Name="ArrowToggleButton"
                                    Width="50" Height="50"          
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Release"
                                      Style="{StaticResource ComboBoxToggleButtonStyle}">
                                    <Path x:Name="Arrow"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="Purple"/>

                                </ToggleButton>
                            </Grid>

                            <Popup x:Name="Popup"
                           AllowsTransparency="True"
                           IsOpen="{Binding IsChecked, ElementName=ArrowToggleButton, Mode=TwoWay}"
                           Placement="Bottom"
                           PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                    Background="White"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="GenericLabel" TargetType="Label">
            <Style.Setters>
                <Setter Property="Padding" Value="20 8"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="#999999"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Margin" Value="0"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericRectangle" TargetType="Rectangle">
            <Style.Setters>
                <Setter Property="Fill" Value="#999999"/>
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Height" Value="auto"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericCheckBox" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="8"/>
        </Style>
        <Style x:Key="ToleranceTextBox" TargetType="TextBox">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="#F2F2F2"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"/>
                            <ScrollViewer x:Name="PART_ContentHost"
                                  Margin="0,0,0,0"
                                  Background="Transparent"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  IsTabStop="False"
                                  Padding="{TemplateBinding Padding}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding volumeTolerance, Converter={StaticResource RangeToBooleanConverter}}" Value="False">
                    <Setter Property="Background" Value="Orange"/>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="3x">
                                <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                                                From="Orange" To="WhiteSmoke" Duration="0:0:0.5" AutoReverse="True" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding volumeTolerance, Converter={StaticResource RangeToBooleanConverter}}" Value="True">
                    <Setter Property="Background" Value="#F2F2F2" />

                </DataTrigger>
            </Style.Triggers>
        </Style>
        
    </UserControl.Resources>
    <Grid Background="#d9d9d9">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="1.5*"/>
        </Grid.RowDefinitions>
        
        <!--RelativeSource={RelativeSource Self}, Path=Position, Converter={StaticResource lookBackConverter}-->

        <Grid x:Name="ViewPortGrid" Grid.Column="0" Grid.Row="1"
               Grid.ColumnSpan="3" Grid.RowSpan="1" 
              Visibility="{Binding workIsInProgress, Converter={StaticResource InverseBoolToVisibilityConverter}}"
              Background="WhiteSmoke">
            <Viewport3D x:Name="Viewport3D"
                        MouseDown="Viewport3D_MouseDown"
                        MouseUp="Viewport3D_MouseUp"
                        MouseMove="Viewport3D_MouseMove"
                        MouseWheel="Viewport3D_MouseWheel">
                <Viewport3D.Camera>
                    <PerspectiveCamera x:Name="mainCamera" 
                                   LookDirection="{Binding Path=cameraDirection, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"  
                                   Position="{Binding Path=cameraPosition, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                        <PerspectiveCamera.Transform>
                            <Transform3DGroup>
                                <RotateTransform3D>
                                    <RotateTransform3D.Rotation>
                                        <AxisAngleRotation3D 
                                Axis="1.0 0.0 0.0"/>
                                    </RotateTransform3D.Rotation>
                                </RotateTransform3D>
                                <RotateTransform3D>
                                    <RotateTransform3D.Rotation>
                                        <AxisAngleRotation3D 
                                Axis="0.0 1.0 0.0"/>
                                    </RotateTransform3D.Rotation>
                                </RotateTransform3D>
                                <RotateTransform3D>
                                    <RotateTransform3D.Rotation>
                                        <AxisAngleRotation3D 
                                Axis="0.0 0.0 1.0"/>
                                    </RotateTransform3D.Rotation>
                                </RotateTransform3D>
                                <ScaleTransform3D ScaleX="50" ScaleY="50" ScaleZ="50"/>
                                <TranslateTransform3D x:Name="cameraTranslation"/>
                            </Transform3DGroup>
                        </PerspectiveCamera.Transform>
                    </PerspectiveCamera>
                </Viewport3D.Camera>
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <DirectionalLight Direction="-1,-1,-1" Color="Beige"/>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <DirectionalLight Direction="1,1,-1" Color="Beige"/>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
                <ModelVisual3D x:Name="structure3Dmodel" Content="{Binding structure3DmodelToShow, Mode=OneWay}"/>
                <ModelVisual3D x:Name="slider3Dmodel" Content="{Binding slider3Dmodel, Mode=OneWay}"/>
                <ModelVisual3D x:Name="slider3Dmodel2" Content="{Binding slider3Dmodel2, Mode=OneWay}"/>
                <helix:ArrowVisual3D Point1="{Binding point1ForArrows}" Point2="{Binding point2ForXarrow}" Diameter="7">
                    <helix:ArrowVisual3D.Material>
                        <DiffuseMaterial Brush="Red"/>
                    </helix:ArrowVisual3D.Material>
                </helix:ArrowVisual3D>
                <helix:ArrowVisual3D Point1="{Binding point1ForArrows}" Point2="{Binding point2ForYarrow}" Diameter="7">
                    <helix:ArrowVisual3D.Material>
                        <DiffuseMaterial Brush="blue"/>
                    </helix:ArrowVisual3D.Material>
                </helix:ArrowVisual3D>
                <helix:ArrowVisual3D Point1="{Binding point1ForArrows}" Point2="{Binding point2ForZarrow}" Diameter="7">

                    <helix:ArrowVisual3D.Material>
                        <DiffuseMaterial Brush="Green"/>
                    </helix:ArrowVisual3D.Material>
                </helix:ArrowVisual3D>
            </Viewport3D>
        </Grid>
        <Grid x:Name="SlidersGrid" Grid.Row="1" Grid.Column="3"
              Style="{StaticResource GenericGrid}" Margin="-0.7">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>

            </Grid.RowDefinitions>

            <TextBlock Text="slice" 
                       Grid.Row="0" Grid.Column="0" 
                       Style="{StaticResource GenericTextBlock}"
                       FontSize="20"/>
            <Slider x:Name="sliderSlice" 
                    Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3"
                    Style="{StaticResource GenericSlider}"
                    FontSize="20"
                    Value="{Binding sliderZposition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Maximum="{Binding maximumSliderZposition}" Minimum="{Binding minimumSliderZposition}"/>

            <TextBlock Text="width" 
                       Grid.Row="1" Grid.Column="0" 
                       Style="{StaticResource GenericTextBlock}"
                       FontSize="20"/>
            <Slider x:Name="sliceWidth" 
                    Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                    Style="{StaticResource GenericSlider}"
                    FontSize="20"
                    Value="{Binding numberOfROISlices, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Minimum="2" Maximum="100"/>

            <TextBlock Text="Volume:" 
                       Grid.Row="2" Grid.Column="0" 
                       Style="{StaticResource GenericTextBlock}"
                       FontSize="20"/>
            <TextBlock Text="{Binding structureVolume}" 
                       Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                       Style="{StaticResource GenericTextBlock}"
                       FontSize="20" HorizontalAlignment="Left"/>

            <TextBlock Text="Tolerance(%):" 
                       Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                       Style="{StaticResource GenericTextBlock}"
                       HorizontalAlignment="Left"
                       FontSize="20" VerticalAlignment="Center"/>
            <TextBox Text="{Binding volumeTolerance, Mode=TwoWay}" 
                       Grid.Row="3" Grid.Column="2"
                       Style="{StaticResource ToleranceTextBox}"
                       FontSize="20" HorizontalAlignment="Left"
                       Height="40" Width="50" 
                       VerticalContentAlignment="Center" VerticalAlignment="Center"/>

            <Grid Grid.Row="3" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

            </Grid>
        </Grid>
        <Button x:Name="ExitButton" Content="Exit"
                Grid.Column="0" Grid.Row="2"
                Style="{StaticResource GenericButton}"
                Command="{Binding exitCommand}"/>
        <Button x:Name="Duplicate3DModelButton" Content="Duplicate 3D model"
                Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2"
                Style="{StaticResource GenericButton}"
                Command="{Binding duplicate3DModelCommand}"/>
        <Button x:Name="RepairSliceButton" Content="Repair Slice"
                Grid.Column="3" Grid.Row="2"
                Style="{StaticResource GenericButton}"
                Command="{Binding repairSliceCommand}"/>
        <Grid Name="StructureSetGrid" Grid.Row="0" Grid.Column="0"
              Style="{StaticResource GenericGrid}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="8 0 0 0"
                       Text="Structure Set:" Style="{StaticResource GenericTextBlock}"
                       TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
            <ComboBox Grid.Row="1" Grid.Column="0" Margin="8 0 0 0"
                   SelectedItem="{Binding currentStructureSetId, Mode=TwoWay}"
                      ItemsSource="{Binding availableStructureSetIDs, Mode=OneWay}"
                   Style="{StaticResource GenericComboBox}"/>
        </Grid>
        <Grid Name="StructureGrid" Grid.Row="0" Grid.Column="1"
              Style="{StaticResource GenericGrid}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2.5*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="8 0 0 0"
                       Text="Structure:" Style="{StaticResource GenericTextBlock}"
                       TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
            <ComboBox Grid.Row="1" Grid.Column="0" Margin="8 0 0 0"
                   ItemsSource="{Binding structureIDsIEnumerable, Mode=OneWay}"
                   SelectedItem="{Binding selectedStructureID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                   Style="{StaticResource GenericComboBox}"/>
        </Grid>
        <Rectangle Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2"
                   Style="{StaticResource GenericRectangle}"
                   />
        <Grid x:Name="LoadingSpinner" Grid.Column="0" Grid.Row="1"
               Grid.ColumnSpan="3" Grid.RowSpan="1"
              Background="Transparent"
               Visibility="{Binding workIsInProgress, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <fa:ImageAwesome Grid.Row="1" Grid.Column="1"
                             Icon="Gear" 
                             Spin="True" FlowDirection="LeftToRight" SpinDuration="20"
                             Width="300" Height="300" Foreground="#c1a0d9"
                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock Grid.Row="2" Grid.Column="1" 
                       Text="{Binding spinnerPhrase, Mode=OneWay}" 
                       HorizontalAlignment="Stretch" VerticalAlignment="Top"
                       Style="{StaticResource GenericTextBlock}" Background="Transparent"
                       Margin="0" Padding="2"
                       FontWeight="SemiBold" FontSize="38" Foreground="#c1a0d9"/>
        </Grid>
    </Grid>
</UserControl>
