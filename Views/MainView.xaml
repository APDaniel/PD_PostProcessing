<UserControl x:Class="PD_ScriptTemplate.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PD_ScriptTemplate.Views"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1200">
    <UserControl.Resources>
        <SolidColorBrush x:Key="BorderPrimary" Color="#1c1c1c"/>
        <Style x:Key="PageHeader" TargetType="TextBlock" >
            <Setter Property="FontSize" Value="32"/>
        </Style>
        <Style x:Key="GenericButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Padding" Value="20 5"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="38"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="#999999"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="0">
                                <ContentControl Content="{TemplateBinding Content}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#808080" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#999999" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListViewItemButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="38"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="0">
                                <ContentControl Content="{TemplateBinding Content}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GenericTextBlock" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Padding" Value="10 0 0 0"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="30"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="#999999"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Center"/>

                <!--<Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBlock">
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="10">
                                <ContentControl HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
            </Style.Setters>
        </Style>
        <Style x:Key="GenericTextBox" TargetType="TextBox">
            <Style.Setters>
                <Setter Property="Padding" Value="20 8"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="38"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="#d4d4d4"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Margin" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="10">
                                <ContentControl HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericComboBox" TargetType="ComboBox">
            <Style.Setters>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="Padding" Value="20 8"/>
                <Setter Property="FontSize" Value="16"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericLabel" TargetType="Label">
            <Style.Setters>
                <Setter Property="Padding" Value="20 8"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="#999999"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Margin" Value="0"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericRectangle" TargetType="Rectangle">
            <Style.Setters>
                <Setter Property="Fill" Value="#999999"/>
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Height" Value="auto"/>
            </Style.Setters>
        </Style>
        <Style x:Key="ListViewItemTextBlock" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Padding" Value="20 8"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Foreground" Value="#999999"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="TextAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="ListViewItemCombobox" TargetType="ComboBox">
            <Style.Setters>
                <Setter Property="Padding" Value="20 8"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="38"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericListViewItem" TargetType="ListViewItem">
            <Style.Setters>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericListView" TargetType="ListView">
            <Style.Setters>
                <Setter Property="Background" Value="WhiteSmoke"/>
            </Style.Setters>
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Rectangle Grid.ColumnSpan="3" Grid.RowSpan="3"
                   Style="{StaticResource GenericRectangle}"/>
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0"
                       Text="Structure Set:" Style="{StaticResource GenericTextBlock}"
                       TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

            <TextBlock Grid.Row="1" Grid.Column="0"
                   Text="{Binding currentStructureSetId}" Style="{StaticResource GenericTextBlock}"
                   TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>

            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="1" Grid.Column="0" 
                       Text="Template:" Style="{StaticResource GenericTextBlock}"
                       HorizontalAlignment="Right" Padding="0 0 10 0"/>
            <ComboBox Grid.Row="1" Grid.Column="1" 
                       Text="Template:" Style="{StaticResource GenericComboBox}"
                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

        </Grid>
        <Button Grid.Column="0" Grid.Row="2" Style="{StaticResource GenericButton}">
            <TextBlock Text="EXIT"/>
        </Button>
        <Button Grid.Column="1" Grid.Row="2" Style="{StaticResource GenericButton}">
            <TextBlock Text="Open Viewer"/>
        </Button>
        <Button Grid.Column="2" Grid.Row="2" Style="{StaticResource GenericButton}">
            <TextBlock Text="Launch"/>
        </Button>

        <Grid Grid.Row="1" Grid.ColumnSpan="3" Background="#d4d4d4">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <ListView ItemsSource="{Binding structuresIEnumerable, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource GenericListView}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" >
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Structure ID">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                        <TextBlock Text="{Binding StructureID, Mode=OneWay}" 
                                              Style="{StaticResource ListViewItemTextBlock}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Label">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                        <TextBlock Text="{Binding StructureLabel, UpdateSourceTrigger=PropertyChanged}"
                                           Style="{StaticResource ListViewItemTextBlock}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Color">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Ellipse Width="20" Height="20"
                                             StrokeThickness="1" Stroke="#999999"
                                             Fill="{Binding StructureColor, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Canvas>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="HighRes?">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                           <Image Source="U:\Scripting\PD_ScriptTemplate\Projects\PD_ScriptTemplate\Components\check_MNc_icon.ico" 
                                           Width="20" Height="20"
                                           Visibility="{Binding IsHighResolution, UpdateSourceTrigger=PropertyChanged,
                                               Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                           />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Volume">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                        <TextBlock Text="{Binding StructureVolume, UpdateSourceTrigger=PropertyChanged}"
                                           Style="{StaticResource ListViewItemTextBlock}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Alerts">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                            <Image Source="U:\Scripting\PD_ScriptTemplate\Projects\PD_ScriptTemplate\Components\alert_YL6_icon.ico" 
                                           Width="20" Height="20"
                                           Visibility="{Binding IsEmptyStructure, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}"
                                           />
                                            <Image Source="U:\Scripting\PD_ScriptTemplate\Projects\PD_ScriptTemplate\Components\check_MNc_icon.ico" 
                                           Width="20" Height="20"
                                           Visibility="{Binding InverseIsEmptyStructure, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}"
                                           />
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Action">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                        <Button Style="{StaticResource ListViewItemButton}">
                                            <TextBlock Text="Action" Style="{StaticResource ListViewItemTextBlock}"/>
                                        </Button>
                                    </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Delete">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                        <Button Style="{StaticResource ListViewItemButton}">
                                            <TextBlock Text="Delete" Style="{StaticResource ListViewItemTextBlock}"/>
                                        </Button>
                                    </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                </ListView>
            </ScrollViewer>
                

        </Grid>
    </Grid>
</UserControl>
