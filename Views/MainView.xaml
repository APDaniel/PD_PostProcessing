<UserControl x:Class="PD_ScriptTemplate.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PD_ScriptTemplate.Views"
             xmlns:converter="clr-namespace:PD_ScriptTemplate.Converter"
             mc:Ignorable="d"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:cmd="http://www.galasoft.ch/mvvmlight" 
             xmlns:local1="clr-namespace:PD_ScriptTemplate.Helpers" 
             xmlns:converter1="clr-namespace:PD_ScriptTemplate.Converter">

    <UserControl.Resources>
        <SolidColorBrush x:Key="BorderPrimary" Color="#1c1c1c"/>
        <Style x:Key="PageHeader" TargetType="TextBlock" >
            <Setter Property="FontSize" Value="32"/>
        </Style>
        <Style x:Key="GenericButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Padding" Value="20 5"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="38"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="#999999"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="0">
                                <ContentControl Content="{TemplateBinding Content}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#808080" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#999999" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GenericTextBlock" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Padding" Value="10 0 0 0"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="30"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="#999999"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericTextBox" TargetType="TextBox">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="#F2F2F2"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"/>
                            <ScrollViewer x:Name="PART_ContentHost"
                                  Margin="0,0,0,0"
                                  Background="Transparent"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  IsTabStop="False"
                                  Padding="{TemplateBinding Padding}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#F2F2F2"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#CCCCCC"/>
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#E6E6E6"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#999999"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FFFFFF"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GenericComboBox" TargetType="ComboBox">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Padding" Value="20 8"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="20">
                                <ContentControl 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>
                            <ToggleButton x:Name="ToggleButton"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  Background="{TemplateBinding Background}"
                                  Padding="6,2"
                                  Foreground="{TemplateBinding Foreground}"
                                  HorizontalContentAlignment="Stretch"
                                  VerticalContentAlignment="Center"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="ContentPresenter"
                                              Margin="4,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False" />
                                    <Path x:Name="Arrow"
                                  Grid.Column="1"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                  Fill="{TemplateBinding Foreground}" />
                                </Grid>
                            </ToggleButton>

                            <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                    Background="#FFFFFF"
                                    BorderThickness="1"
                                    BorderBrush="#888888" />
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GenericLabel" TargetType="Label">
            <Style.Setters>
                <Setter Property="Padding" Value="20 8"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="#999999"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Margin" Value="0"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericRectangle" TargetType="Rectangle">
            <Style.Setters>
                <Setter Property="Fill" Value="WhiteSmoke"/>
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Height" Value="auto"/>
            </Style.Setters>
        </Style>
        <Style x:Key="ListViewItemTextBlock" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Padding" Value="20 8"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Foreground" Value="#999999"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="TextAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="ListViewItemAddButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="38"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="20">
                                <ContentControl Content="{TemplateBinding Content}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#87fa89" Duration="0:0:0.8"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListViewItemDeleteButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="38"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="20">
                                <ContentControl Content="{TemplateBinding Content}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#fa8787" Duration="0:0:0.8"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListViewItemActionButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="38"/>
                <Setter Property="Foreground" Value="#d9d9d9"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="20">
                                <ContentControl Content="{TemplateBinding Content}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.8"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListViewItemComboBox" TargetType="ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Padding" Value="20 8"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style x:Key="GenericListView" TargetType="ListView">
            <Style.Setters>
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="SelectionMode" Value="Single"/>
            </Style.Setters>
        </Style>
        <Style x:Key="GenericListViewItem" TargetType="ListViewItem">
            <Style.Setters>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="IsSelected" Value="True"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Background" Value="#d9d9d9"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="WhiteSmoke" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style x:Key="GenericGridViewColumnHeader" TargetType="GridViewColumnHeader">
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Border Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Margin="{TemplateBinding Margin}" 
                                    CornerRadius="0">
                            <ContentControl     Content="{TemplateBinding Content}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#d9d9d9" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Color x:Key="FilledColor" A="255" B="155" R="155" G="155"/>
        <Color x:Key="UnfilledColor" A="0" B="155" R="155" G="155"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converter:StarWidthConverter x:Key="starWidthConverter"/>
        <converter:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <converter:InverseBoolToOpacityConverter x:Key="InverseBoolToOpacityConverter"/>
        <converter1:OperationStringToVisibilityConverter x:Key="OperationStringToVisibilityConverter"/>
        <converter1:InverseOperationStringToVisibilityConverter x:Key="InverseOperationStringToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid Background="#999999">
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Grid.Row="1" 
                   Grid.ColumnSpan="3" Grid.RowSpan="1"
                   Style="{StaticResource GenericRectangle}"/>
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0"
                       Text="Structure Set:" Style="{StaticResource GenericTextBlock}"
                       TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

            <TextBlock Grid.Row="1" Grid.Column="0"
                   Text="{Binding currentStructureSetId}" Style="{StaticResource GenericTextBlock}"
                   TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0"
                Text="Selected structure ID:" Style="{StaticResource GenericTextBlock}"
                       TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
            <TextBlock Grid.Row="1" Grid.Column="0"
                Text= "{Binding selectedStructureIDtoShow}" Style="{StaticResource GenericTextBlock}"
                       TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Top"
                       Foreground="{Binding selectedStructureColorToShow, Mode=OneWay}"/>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="2"
              Margin="0 0 10 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>

            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="1" Grid.Column="0" 
                       Text="Template:" Style="{StaticResource GenericTextBlock}"
                       HorizontalAlignment="Right" Padding="0 0 10 0"/>
            <ComboBox  Grid.Row="1" Grid.Column="1" 
                       Text="Template:" Style="{StaticResource GenericComboBox}"
                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

        </Grid>
        <Grid Grid.Row="1" Grid.ColumnSpan="3" 
              Background="#d4d4d4" 
              Opacity="{Binding workIsInProgress, Converter={StaticResource InverseBoolToOpacityConverter}}">
            
                <ListView x:Name="StructuresListView" 
                          ScrollViewer.CanContentScroll="True" 
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          ItemsSource="{Binding structuresIEnumerable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                          SelectedItem="{Binding selectedStructureListViewItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          IsSynchronizedWithCurrentItem="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          Style="{StaticResource GenericListView}" ItemContainerStyle="{StaticResource GenericListViewItem}" Width="Auto">
                <ListView.View>
                    <GridView>
                            <GridViewColumn x:Name="StructureIDColumn"
                                            Width="200">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="StructureID"
                                                          Command="{Binding CommandSortStructuresInTheListViewByStructureID}"
                                                          Style="{StaticResource GenericGridViewColumnHeader}"/>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.structureIDsIEnumerable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectedItem="{Binding StructureID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch"
                                            Style="{StaticResource ListViewItemComboBox}" Grid.Column="0" Grid.Row="0"/>
                                    </Grid>
                                </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="LabelColumn" Width="150">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="Label"
                                                          Command="{Binding CommandSortStructuresInTheListViewByStructureLabel}"
                                                          Style="{StaticResource GenericGridViewColumnHeader}"/>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                    <TextBlock Text="{Binding StructureLabel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           Style="{StaticResource ListViewItemTextBlock}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="ColorColumn"  
                                            Width="50">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="Color" IsHitTestVisible="False"
                                                          Style="{StaticResource GenericGridViewColumnHeader}"/>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Canvas>
                                                <Ellipse Width="20" Height="20" Canvas.Left="-8" Canvas.Top="-9"
                                             StrokeThickness="1" Stroke="#999999"
                                             Fill="{Binding StructureColor, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </Canvas>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="HighResColumn"  
                                            Width="50">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="HighRes" 
                                                          Command="{Binding CommandSortStructuresInTheListViewByStructureResolution}"
                                                          Style="{StaticResource GenericGridViewColumnHeader}"/>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="U:\Scripting\PD_ScriptTemplate\Projects\PD_ScriptTemplate\Components\check_MNc_icon.ico" 
                                           Width="20" Height="20"
                                           Visibility="{Binding IsHighResolution, UpdateSourceTrigger=PropertyChanged,
                                               Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                           />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="VolumeColumn"
                                             Width="130">
                                <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Volume" Command="{Binding CommandSortStructuresInTheListViewByStructureVolume,Mode=OneWay}"
                                                          Style="{StaticResource GenericGridViewColumnHeader}"/>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                    <TextBlock Text="{Binding StructureVolumeWithcc, UpdateSourceTrigger=PropertyChanged}"
                                           Style="{StaticResource ListViewItemTextBlock}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="AlertsColumn"  
                                            Width="50">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="Alerts" 
                                                          Command="{Binding CommandSortStructuresInTheListViewByStructureAlerts}"
                                                          Style="{StaticResource GenericGridViewColumnHeader}"/>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Image Source="U:\Scripting\PD_ScriptTemplate\Projects\PD_ScriptTemplate\Components\alert_YL6_icon.ico" 
                                           Width="20" Height="20"
                                           Visibility="{Binding IsEmptyStructure, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}"
                                           />
                                            <Image Source="U:\Scripting\PD_ScriptTemplate\Projects\PD_ScriptTemplate\Components\check_MNc_icon.ico" 
                                           Width="20" Height="20"
                                           Visibility="{Binding InverseIsEmptyStructure, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}"
                                           />
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        <GridViewColumn x:Name="ActionColumn"  
                                            Width="250">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Operator/Structure/Margin" IsHitTestVisible="False"
                                                          Style="{StaticResource GenericGridViewColumnHeader}"/>
                            </GridViewColumn.Header>
                            
                            <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="3*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ComboBox Name="ManipulationComboBox" 
                                                  Grid.Column="0" Grid.Row="0"
                                                  Style="{StaticResource ListViewItemComboBox}" Padding="0"
                                                  ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, 
                                                  Path=DataContext.ManipulationsAvailable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedItem="{Binding Operation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                  
                                        <ComboBox Name="StructureToManipulateComboBox" 
                                                  Grid.Column="1" Grid.Row="0"
                                                  ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.structureIDsIEnumerable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedItem="{Binding Structure2ToManipulateID}"
                                                  Style="{StaticResource ListViewItemComboBox}"/>

                                        <Grid Name="OneMargin" Grid.Column="2" Grid.Row="0" 
                                              Visibility="{Binding Operation, Converter={StaticResource InverseOperationStringToVisibilityConverter}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <TextBox x:Name="MarginTextBox" Grid.Column="2" Grid.Row="0"
                                        Text="{Binding Margin, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                Style="{StaticResource GenericTextBox}"/>
                                        </Grid>

                                        <Grid Name="TwoMargins" Grid.Column="2" Grid.Row="0" 
                                              Visibility="{Binding Operation, Converter={StaticResource OperationStringToVisibilityConverter}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <TextBox x:Name="Margin1TextBox" Grid.Column="0" Grid.Row="0"
                                        Text="{Binding Margin, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                Style="{StaticResource GenericTextBox}"/>

                                            <TextBox x:Name="Margin2TextBox" Grid.Column="1" Grid.Row="0"
                                        Text="{Binding Margin2, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                Style="{StaticResource GenericTextBox}"/>
                                        </Grid>
                                        
                                    </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="AddStructureColumn"  
                                            Width="80">
                                <GridViewColumn.Header>
                                <GridViewColumnHeader Content="AddStructure" IsHitTestVisible="False"
                                                          Style="{StaticResource GenericGridViewColumnHeader}"/>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Style="{StaticResource ListViewItemAddButton}" 
                                                Command="{Binding DataContext.CommandAddStructureToTheListView, 
                                            RelativeSource={RelativeSource AncestorType={x:Type ListView}}}">
                                            <StackPanel>
                                                <Image Width="30" Height="30" 
                                                       Source="U:\Scripting\PD_ScriptTemplate\Projects\PD_ScriptTemplate\Components\plus_icon.ico"/>
                                            </StackPanel>

                                        </Button>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="DeleteStructureColumn"  
                                            Width="80">
                                <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Delete" IsHitTestVisible="False"
                                                          Style="{StaticResource GenericGridViewColumnHeader}"/>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Style="{StaticResource ListViewItemDeleteButton}" 
                                                Command="{Binding DataContext.CommandDeleteStructureFromTheListView, 
                                                RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                                CommandParameter="{Binding}">
                                            <StackPanel>
                                                <Image Width="30" Height="30" 
                                                       Source="U:\Scripting\PD_ScriptTemplate\Projects\PD_ScriptTemplate\Components\cross_icon.ico"/>
                                            </StackPanel>

                                        </Button>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>



        </Grid>
        <Button x:Name="ButtonEXIT" Grid.Row="2" Grid.Column="0"  Style="{StaticResource GenericButton}">
            <TextBlock Text="EXIT"/>
        </Button>
        <Button x:Name="ButtonPropogateAllStructures" Grid.Row="2" Grid.Column="1"  Style="{StaticResource GenericButton}"
                Command="{Binding CommandPopulateStructuresToTheListView}">
            <TextBlock Text="Propogate Structures"/>
        </Button>
        <Button x:Name="CreateStructures" Grid.Row="2" Grid.Column="2" Style="{StaticResource GenericButton}"
                 Command="{Binding CommandCreateOptimizationStructures}">
            <TextBlock Text="Create Structures"/>
        </Button>
        <Grid x:Name="LoadingSpinner" Grid.Row="1" Grid.ColumnSpan="3"
              Background="Transparent"
               Visibility="{Binding workIsInProgress, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <fa:ImageAwesome Grid.Row="1" Grid.Column="1"
                             Icon="Gear" 
                             Spin="True" FlowDirection="LeftToRight" SpinDuration="20"
                             Width="300" Height="300" Foreground="#ccb1e0"
                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock Grid.Row="2" Grid.Column="1" 
                       Text="Loading..." 
                       HorizontalAlignment="Center" VerticalAlignment="Top"
                       Style="{StaticResource ListViewItemTextBlock}"
                       FontWeight="SemiBold" FontSize="38" Foreground="#ccb1e0"/>
        </Grid>
    </Grid>
    
</UserControl>
